name: Draft Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (must start with 'v')"
        required: true

env:
  SDK_VERSION: ${{ github.event.inputs.version }}
  SDK_TAG: sdk/${{ github.event.inputs.version }}
  SDK_BRANCH: release/sdk/${{ github.event.inputs.version }}

concurrency:
  group: "draft-release-${{ github.event.inputs.version }}"
  cancel-in-progress: false

jobs:
  c-cpp:
    uses: ./.github/workflows/c_cpp.yml
    with:
      sdk-version: ${{ github.event.inputs.version }}
  cpp-data-loader:
    uses: ./.github/workflows/cpp_data_loader.yml
    with:
      sdk-version: ${{ github.event.inputs.version }}

  draft:
    runs-on: ubuntu-latest
    needs:
      - c-cpp
      - cpp-data-loader
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - name: Check for existing ${{ env.SDK_TAG }} release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if gh release view "${{ env.SDK_TAG }}" --json "name,url"; then
            echo "Release ${SDK_TAG} already exists!"
            exit 1
          fi

      - run: yarn install --immutable

      - id: bump-version
        run: yarn bump-sdk-version "${{ env.SDK_VERSION }}"

      - name: Commit and push branch
        run: |
          git config user.name "Foxglove"
          git config user.email "support@foxglove.dev"
          git checkout -b "${{ env.SDK_BRANCH }}"
          git add .
          git commit -m "Release '${{ env.SDK_TAG }}'"
          git push -f origin "${{ env.SDK_BRANCH }}"

      - name: Download C/C++ artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: "*.zip"
          path: ci_artifacts/
          merge-multiple: true

      - name: List artifacts
        run: find ./ci_artifacts -type f

      - name: Create draft release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ env.SDK_TAG }}" \
            ./ci_artifacts/* \
            --title "${{ env.SDK_TAG }}" \
            --target "${{ env.SDK_BRANCH }}" \
            --generate-notes \
            --notes-start-tag "sdk/v${{ steps.bump-version.outputs.prev-version }}" \
            --draft
